# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: tests

on: 
  push:
    branches:
      - main
    tags:
      - "*-[0-9]+.*"
  pull_request:
    branches:
      - main

jobs:
  test-pip:
    name: ${{ matrix.platform }} py${{ matrix.python-version }}
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.7', '3.10']

        # Breaks due to https://github.com/jpype-project/jpype/issues/1009
        # Should be included once the fix is released
        exclude:
          - platform: windows-latest
            python-version: "3.10"
        include:
          - platform: windows-latest
            python-version: "3.9"

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Java 8
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'zulu'

      # these libraries, along with pytest-xvfb (added in the `deps` in tox.ini),
      # enable testing on Qt on linux
      - name: Install Linux libraries
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y libdbus-1-3 libxkbcommon-x11-0 libxcb-icccm4 \
            libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 \
            libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0

      # strategy borrowed from vispy for installing opengl libs on windows
      - name: Install Windows OpenGL
        if: runner.os == 'Windows'
        run: |
          git clone --depth 1 https://github.com/pyvista/gl-ci-helpers.git
          powershell gl-ci-helpers/appveyor/install_opengl.ps1
      
      # We run headless on CI. This yields issues on Mac, where running Java
      # headless will alter the screen size on Python, leading to errors. Adding
      # this environment variable prevents Java from modifying the screen size.
      - name: Set MacOS environment variables
        if: runner.os == 'MacOS'
        run: |
          echo "AWT_FORCE_HEADFUL=true" >> $GITHUB_ENV

      - name: Install napari-imagej
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e '.[dev]'

      - name: Test napari-imagej
        run: |
          python -m pytest -p no:faulthandler --color=yes

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: psf/black@stable

  flake:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v3
      - name: flake src code
        run: |
          python -m pip install flake8
          python -m flake8 src
      - name: flake test code
        run: |
          python -m flake8 tests

  conda-dev-test:
    name: Conda Setup & Code Coverage
    runs-on: ubuntu-latest
    defaults:
      # Steps that rely on the activated environment must be run with this shell setup.
      # See https://github.com/marketplace/actions/setup-miniconda#important
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          # Create env with dev packages
          auto-update-conda: true
          python-version: 3.9
          environment-file: dev-environment.yml
          # Activate imglyb-dev environment
          activate-environment: imglyb-dev
          auto-activate-base: false
          # Use mamba for faster setup
          use-mamba: true
          mamba-version: "*"

      # these libraries, along with pytest-xvfb (added in the `deps` in tox.ini),
      # enable testing on Qt on linux
      - name: Install Linux libraries
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y libdbus-1-3 libxkbcommon-x11-0 libxcb-icccm4 \
            libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 \
            libxcb-xinerama0 libxcb-xinput0 libxcb-xfixes0

      # strategy borrowed from vispy for installing opengl libs on windows
      - name: Install Windows OpenGL
        if: runner.os == 'Windows'
        run: |
          git clone --depth 1 https://github.com/pyvista/gl-ci-helpers.git
          powershell gl-ci-helpers/appveyor/install_opengl.ps1

      - name: Test napari-imagej
        run: |
          python -m pytest -p no:faulthandler --cov-report=xml --cov=.

      # We could do this in its own action, but we'd have to setup the environment again.
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v2
